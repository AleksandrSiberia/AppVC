//
//  TestUserService.swift
//  Novigation
//
//  Created by –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –•–º—ã—Ä–æ–≤ on 29.08.2022.
//

import UIKit
import RealmSwift

class TestUserService: UserServiceProtocol {


    func checkTheLogin(_ login: String, password: String, loginInspector: LoginViewControllerDelegate, loginViewController: LoginViewController, completion: @escaping (User?) -> Void ) {


        loginInspector.checkCredentials(withEmail: login, password: password) {string in

            guard string == "–û—Ç–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø" else {
                completion(nil)
                return
            }


            if RealmService.shared.getAllUsers()?.isEmpty == false {

                for user in RealmService.shared.getAllUsers() ?? [] {

                    if login == user.login {
                        print("ü§∏üèº‚Äç‚ôÇÔ∏è user is cached")

                        // CoreDadaUser –ø–æ–¥–≥—Ä—É–∂–∞–µ–º –ø–æ –ª–æ–≥–∏–Ω—É –∏–∑ CoreData

                        let currentUser: User = User("Cashed AleksandrSiberia",
                                                     userStatus: "Test",
                                                     userImage: UIImage(named: "avatar")! )
                        completion(currentUser)
                    }




                    else {
                        print("üì© save new user" )

                        // –ø–∏—à–µ–º –≤ CoreDate –∏ —Å—Ä–∞–∑—É –≥—Ä—É–∑–∏–º

                        let currentUser: User = User("New AleksandrSiberia",
                                                     userStatus: "Test",
                                                     userImage: UIImage(named: "avatar")! )

                        completion(currentUser)
                    }
                }

            }




            else {

                print("üì© save new user, 0 cashed users" )

                // –ø–∏—à–µ–º –≤ CoreDate –∏ —Å—Ä–∞–∑—É –≥—Ä—É–∑–∏–º

                let currentUser: User = User("New Zero AleksandrSiberia",
                                             userStatus: "Test",
                                             userImage: UIImage(named: "avatar")! )
                completion(currentUser)
            }
        }







    }

}

